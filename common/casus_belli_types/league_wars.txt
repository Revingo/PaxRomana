reintegrate_in_league_cb = {
	group = conquest

	interface_priority = 90

	attacker_wargoal_percentage = 0.8
	
	max_defender_score_from_occupation = 50
	max_attacker_score_from_occupation = 50

	attacker_score_from_battles_scale = 120
	defender_score_from_battles_scale = 120

	siege_participation_mult = 1.2
	battle_participation_mult = 1.5

	target_titles = all
	target_title_tier = county
	ignore_effect = change_title_holder

	combine_into_one = yes

	ai_score_mult = {
		value = 1

		if = {
			limit = { NOT = { scope:defender.house = scope:attacker.house }}
			
			add = 1
		}

		# AI in struggles act insularly for wars that don't have a familial or legal basis.
		multiply = struggle_wars_prioritise_struggle_targets_value
	}

	max_ai_diplo_distance_to_title = 1500

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	transfer_behavior = inherit

	cost = {
		prestige = {
			base = 300
			if = {
				limit = { scope:defender.highest_held_title_tier >= 3 }
				
				add = 300
			}
			if = {
				limit = { scope:defender.highest_held_title_tier >= 4}

				add = 300
			}
			if = {
				limit = { scope:defender.highest_held_title_tier >= 5}

				add = 300
			}
		}
	}

	allowed_for_character = {
		has_government = city-state_government
		AND = {
			has_variable = in_a_league
			var:in_a_league = yes
		}
		NOT = { has_variable = league_owner }
		has_variable_list = reintegrate_in_league
	}

	allowed_against_character = {
		scope:attacker = {
			ALL_FALSE = {
				top_liege = scope:defender.top_liege
				liege = scope:defender
			}

			AND = {
				has_variable_list = reintegrate_in_league
				any_in_list = {
					variable = reintegrate_in_league

					this = scope:defender
				}
			}
		}
	}

	valid_to_start = {
		has_government = city-state_government
		AND = {
			has_variable = in_a_league
			var:in_a_league = yes
		}
		NOT = { has_variable = league_owner }
	}

	should_invalidate = {
		NOT = {
			any_in_list = {
				list = target_titles
				any_in_de_jure_hierarchy = {
					tier = tier_county
					holder = {
						target_is_same_character_or_above = scope:defender
					}
				}
			}
		}
	}

	on_declaration = {
		on_declared_war = yes
	}

	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }
		
		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_low_effect = yes }

		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}

		#Grab the designated titles.
		every_in_list = {
			list = target_titles
			change_title_holder = {
				holder = scope:attacker
				change = scope:change
			}
		}

		resolve_title_and_vassal_change = scope:change

		# Prestige Progress for the Attacker
		every_in_list = {
			list = target_titles
			scope:attacker = {
				add_prestige_experience = minor_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker
			FAME_BASE = minor_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }

		#Remove the defender from the reintegrate_in_league variable list
		scope:attacker = {
			remove_list_variable = {
				name = reintegrate_in_league

				target = scope:defender
			}
		}
	}

	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }
		# Prestige loss for the attacker
		scope:attacker = {
			add_prestige = {
				value = minor_prestige_value
				multiply = -1.0
			}
			stress_impact = {
 				ambitious = medium_stress_impact_gain
 				arrogant = medium_stress_impact_gain
 			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker # Not important as the scales are identical
			FAME_BASE = minor_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		scope:defender = {
			stress_impact = {
 				arrogant = medium_stress_impact_gain
 			}
		}

		add_truce_white_peace_effect = yes
	}

	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }
		
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_low_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 2
			}
			add_prestige = {
				value = medium_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for Defender
		scope:defender = {
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = medium_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:defender
			FAME_BASE = minor_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		add_truce_attacker_defeat_effect = yes

		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes

		#Remove the defender from the reintegrate_in_league variable list
		scope:attacker = {
			remove_list_variable = {
				name = reintegrate_in_league

				target = scope:defender
			}
		}
	}

	on_invalidated_desc = msg_reintegrate_in_league_cb_invalidated

	war_name = PAX_CB_REINTEGRATE_IN_LEAGUE_NAME
	my_war_name = PAX_CB_REINTEGRATE_IN_LEAGUE_MY_NAME
	war_name_base = PAX_CB_REINTEGRATE_IN_LEAGUE_BASE_NAME
	my_war_name_base = PAX_CB_REINTEGRATE_IN_LEAGUE_MY_BASE_NAME
}